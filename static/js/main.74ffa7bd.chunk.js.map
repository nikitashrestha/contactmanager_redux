{"version":3,"sources":["reducers/contactReducer.js","reducers/index.js","actions/types.js","store.js","components/pages/About.js","config.js","components/layout/Header.js","components/pages/NotFound.js","components/contacts/Contact.js","actions/contactAction.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["initialState","contacts","combineReducers","contact","state","arguments","length","undefined","action","type","Object","objectSpread","payload","filter","id","concat","toConsumableArray","map","email","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","apply","About","react_default","a","createElement","className","config","env","process","basename","apiKey","REACT_APP_API_KEY","Header","props","branding","href","Link","to","defaultProps","NotFound","Contact","showContactInfo","onDeleteClick","_this","delContact","_this2","this","_this$props$contact","name","phone_number","onClick","setState","style","cursor","float","color","bind","marginRight","Component","connect","_ref3","asyncToGenerator","regenerator_default","mark","_callee3","dispatch","wrap","_context3","prev","next","axios","delete","headers","X-Api-Key","t0","stop","_x3","Contacts","getContact","Fragment","contacts_Contact","key","_ref","_callee","res","_context","get","sent","data","_x","PropTypes","array","isRequired","func","TextInputGroup","label","value","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onSubmit","e","preventDefault","_this$state","newContact","addContact","history","push","phone","defineProperty","target","_this$state2","layout_TextInputGroup","prototypes","_ref2","_callee2","_context2","post","_x2","EditContact","updateContact","match","params","updContact","nextProps","nextState","_nextProps$contact","getCont","_ref4","_callee4","_context4","_x4","_ref5","_callee5","_context5","put","_x5","object","App","es","BrowserRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.74ffa7bd.chunk.js","sourcesContent":["import {\n  GET_CONTACTS,\n  DEL_CONTACTS,\n  ADD_CONTACTS,\n  GET_CONTACT,\n  UPD_CONTACT,\n} from \"../actions/types\";\n\nconst initialState = {\n  contacts: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_CONTACTS:\n      return { ...state, contacts: action.payload };\n\n    case DEL_CONTACTS:\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          (contact) => contact.id !== action.payload\n        ),\n      };\n\n    case ADD_CONTACTS:\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts],\n      };\n\n    case GET_CONTACT:\n      return {\n        ...state,\n        contact: action.payload,\n      };\n\n    case UPD_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.map((contact) =>\n          contact.email === action.payload.email\n            ? (contact = action.payload)\n            : contact\n        ),\n      };\n\n    default:\n      return state;\n  }\n}\n","//meeting place for all reducers\nimport { combineReducers } from \"redux\";\nimport contactReducer from \"./contactReducer.js\";\n\nexport default combineReducers({\n  contact: contactReducer\n});\n","export const GET_CONTACTS = \"GET_CONTACTS\";\nexport const DEL_CONTACTS = \"DEL_CONTACTS\";\nexport const ADD_CONTACTS = \"ADD_CONTACTS\";\nexport const GET_CONTACT = \"GET_CONTACT\";\nexport const UPD_CONTACT = \"UPD_CONTACT\";\n","import thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension/developmentOnly\";\n\nconst initialState = {}; //createStor takes empty state initially as parameter\n\nconst middleware = [thunk];\n\nexport const store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n","/**\n * Application wide configuration.\n */\nconst config = {\n  env: process.env.NODE_ENV,\n  basename: process.env.REACT_APP_BASE_NAME,\n  apiKey: process.env.REACT_APP_API_KEY,\n};\n\nexport default config;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nimport config from \"./../../config\";\n\nconst Header = (props) => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href={config.basename} className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" /> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" /> Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" /> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: \"My App\",\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { delContact } from \"../../actions/contactAction\";\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false,\n  };\n\n  onDeleteClick = (id) => {\n    //// DELETE CONTACT ////\n    this.props.delContact(id);\n  };\n\n  render() {\n    const { id, name, email, phone_number } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <div className=\"card card-body mb-3\">\n        <h4>\n          {name}{\" \"}\n          <i\n            onClick={() =>\n              this.setState({\n                showContactInfo: !this.state.showContactInfo,\n              })\n            }\n            className=\"fas fa-sort-down\"\n            style={{ cursor: \"pointer\" }}\n          />\n          <i\n            className=\"fas fa-times\"\n            style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n            onClick={this.onDeleteClick.bind(this, id)}\n          />\n          <Link to={`/contact/edit/${id}`}>\n            <i\n              className=\"fas fa-pencil-alt\"\n              style={{\n                cursor: \"pointer\",\n                float: \"right\",\n                color: \"black\",\n                marginRight: \"1rem\",\n              }}\n            />\n          </Link>\n        </h4>\n        {showContactInfo ? (\n          <ul className=\"list-group\">\n            <li className=\"list-group-item\">Email: {email}</li>\n            <li className=\"list-group-item\">Phone: {phone_number}</li>\n          </ul>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n  delContact: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { delContact })(Contact);\n","import {\n  GET_CONTACTS,\n  ADD_CONTACTS,\n  DEL_CONTACTS,\n  GET_CONTACT,\n  UPD_CONTACT,\n} from \"./types\";\nimport axios from \"axios\";\n\nimport config from \"./../config\";\n\nexport const getContact = () => async (dispatch) => {\n  const res = await axios.get(\n    \"https://4o94882eoe.execute-api.us-east-1.amazonaws.com/uat/contacts\"\n  );\n\n  dispatch({\n    type: GET_CONTACTS,\n    payload: res.data.data,\n  });\n};\n\nexport const addContact = (contact) => async (dispatch) => {\n  await axios.post(\n    \"https://4o94882eoe.execute-api.us-east-1.amazonaws.com/uat/contacts\",\n    contact,\n    {\n      headers: {\n        \"X-Api-Key\": config.apiKey,\n      },\n    }\n  );\n\n  dispatch({\n    type: ADD_CONTACTS,\n    payload: contact,\n  });\n};\n\nexport const delContact = (id) => async (dispatch) => {\n  try {\n    await axios.delete(\n      `https://4o94882eoe.execute-api.us-east-1.amazonaws.com/uat/contacts/${id}`,\n      {\n        headers: {\n          \"X-Api-Key\": config.apiKey,\n        },\n      }\n    );\n    \n    dispatch({\n      type: DEL_CONTACTS,\n      payload: id,\n    });\n  } catch (e) {\n    dispatch({\n      type: DEL_CONTACTS,\n      payload: id,\n    });\n  }\n};\n\nexport const getCont = (id) => async (dispatch) => {\n  const res = await axios.get(\n    `https://4o94882eoe.execute-api.us-east-1.amazonaws.com/uat/contacts/${id}`\n  );\n\n  dispatch({\n    type: GET_CONTACT,\n    payload: res.data,\n  });\n};\n\nexport const updContact = (contact) => async (dispatch) => {\n  await axios.put(\n    `https://4o94882eoe.execute-api.us-east-1.amazonaws.com/uat/contacts/${contact.id}`,\n    contact,\n    {\n      headers: {\n        \"X-Api-Key\": config.apiKey,\n      },\n    }\n  );\n\n  dispatch({\n    type: UPD_CONTACT,\n    payload: contact,\n  });\n};\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getContact } from \"../../actions/contactAction\";\n\nclass Contacts extends Component {\n  componentDidMount() {\n    this.props.getContact();\n  }\n  render() {\n    const { contacts } = this.props;\n    return (\n      <React.Fragment>\n        <h1 className=\"display-4 mb-2\">\n          <span className=\"text-danger\">Contact</span> List\n        </h1>\n        {contacts.map(contact => (\n          <Contact key={contact.id} contact={contact} />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\nconst mapStatToprops = state => ({\n  contacts: state.contact.contacts\n});\n\nexport default connect(\n  mapStatToprops,\n  { getContact }\n)(Contacts);\n\nContacts.PropTypes = {\n  contact: PropTypes.array.isRequired,\n  getContact: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: \"text\"\n};\n\nexport default TextInputGroup;\n","import PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport React, { Component } from \"react\";\n\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport { addContact } from \"../../actions/contactAction\";\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone_number: \"\",\n    errors: {},\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, email, phone_number } = this.state;\n\n    // Check For Errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n\n    if (phone_number === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    const newContact = {\n      name: name,\n      email: email,\n      phone_number: phone_number,\n    };\n\n    //// SUBMIT CONTACT ////\n    this.props.addContact(newContact);\n\n    // Clear State\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone_number: \"\",\n      errors: {},\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone_number, errors } = this.state;\n\n    return (\n      <div className=\"card mb-3\">\n        <div className=\"card-header\">Add Contact</div>\n        <div className=\"card-body\">\n          <form onSubmit={this.onSubmit}>\n            <TextInputGroup\n              label=\"Name\"\n              name=\"name\"\n              placeholder=\"Enter Name\"\n              value={name}\n              onChange={this.onChange}\n              error={errors.name}\n            />\n            <TextInputGroup\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value={email}\n              onChange={this.onChange}\n              error={errors.email}\n            />\n            <TextInputGroup\n              label=\"Phone\"\n              name=\"phone_number\"\n              placeholder=\"Enter Phone\"\n              value={phone_number}\n              onChange={this.onChange}\n              error={errors.phone}\n            />\n            <input\n              type=\"submit\"\n              value=\"Add Contact\"\n              className=\"btn btn-light btn-block\"\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddContact.prototypes = {\n  addContact: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addContact })(AddContact);\n","import React, { Component } from \"react\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport { connect } from \"react-redux\";\nimport { updContact, getCont } from \"../../actions/contactAction\";\nimport PropTypes from \"prop-types\";\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone_number: \"\",\n    errors: {},\n  };\n\n  componentWillReceiveProps(nextProps, nextState) {\n    const { name, email, phone_number } = nextProps.contact;\n    this.setState({\n      name,\n      email,\n      phone_number,\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getCont(id);\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, email, phone_number } = this.state;\n\n    // Check For Errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n\n    if (phone_number === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n    const { id } = this.props.match.params;\n\n    const updateContact = {\n      id:id,\n      name: name,\n      email: email,\n      phone_number: phone_number,\n    };\n\n    //// UPDATE CONTACT ////\n    this.props.updContact(updateContact);\n    // Clear State\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone_number: \"\",\n      errors: {},\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone_number, errors } = this.state;\n\n    return (\n      <div className=\"card mb-3\">\n        <div className=\"card-header\">Edit Contact</div>\n        <div className=\"card-body\">\n          <form onSubmit={this.onSubmit}>\n            <TextInputGroup\n              label=\"Name\"\n              name=\"name\"\n              placeholder=\"Enter Name\"\n              value={name}\n              onChange={this.onChange}\n              error={errors.name}\n            />\n            <TextInputGroup\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value={email}\n              onChange={this.onChange}\n              error={errors.email}\n            />\n            <TextInputGroup\n              label=\"Phone\"\n              name=\"phone_number\"\n              placeholder=\"Enter Phone\"\n              value={phone_number}\n              onChange={this.onChange}\n              error={errors.phone}\n            />\n            <input\n              type=\"submit\"\n              value=\"Update Contact\"\n              className=\"btn btn-light btn-block\"\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  contact: state.contact.contact,\n});\n\nexport default connect(mapStateToProps, { getCont, updContact })(EditContact);\n\nEditContact.PropTypes = {\n  contact: PropTypes.object.isRequired,\n  getCont: PropTypes.func.isRequired,\n};\n","import { Provider } from \"react-redux\";\nimport React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport { store } from \"./store.js\";\nimport About from \"./components/pages/About\";\nimport Header from \"./components/layout/Header\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\n\nimport config from \"./config\"\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router basename={config.basename}>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}