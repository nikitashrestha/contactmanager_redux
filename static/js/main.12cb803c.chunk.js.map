{"version":3,"sources":["components/contacts/Contact.js","actions/contactAction.js","actions/types.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","reducers/contactReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["Contact","state","showContactInfo","onDeleteClick","id","_this","props","delContact","_this2","this","_this$props$contact","contact","name","email","phone","react_default","a","createElement","className","onClick","setState","style","cursor","float","color","bind","Link","to","concat","marginRight","Component","connect","_ref3","Object","asyncToGenerator","regenerator_default","mark","_callee3","dispatch","wrap","_context3","prev","next","axios","delete","type","payload","t0","stop","_x3","apply","arguments","Contacts","getContact","contacts","Fragment","map","contacts_Contact","key","_ref","_callee","res","_context","get","sent","data","_x","PropTypes","array","isRequired","func","TextInputGroup","label","value","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onSubmit","e","preventDefault","_this$state","newContact","addContact","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","prototypes","_ref2","_callee2","_context2","post","_x2","EditContact","updateContact","match","params","updContact","nextProps","nextState","_nextProps$contact","getCont","_ref4","_callee4","_context4","_x4","_ref5","_callee5","_context5","put","_x5","object","Header","branding","href","About","NotFound","initialState","combineReducers","length","undefined","action","objectSpread","filter","toConsumableArray","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","es","BrowserRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.12cb803c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { delContact } from \"../../actions/contactAction\";\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = id => {\n    //// DELETE CONTACT ////\n    this.props.delContact(id);\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <div className=\"card card-body mb-3\">\n        <h4>\n          {name}{\" \"}\n          <i\n            onClick={() =>\n              this.setState({\n                showContactInfo: !this.state.showContactInfo\n              })\n            }\n            className=\"fas fa-sort-down\"\n            style={{ cursor: \"pointer\" }}\n          />\n          <i\n            className=\"fas fa-times\"\n            style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n            onClick={this.onDeleteClick.bind(this, id)}\n          />\n          <Link to={`contact/edit/${id}`}>\n            <i\n              className=\"fas fa-pencil-alt\"\n              style={{\n                cursor: \"pointer\",\n                float: \"right\",\n                color: \"black\",\n                marginRight: \"1rem\"\n              }}\n            />\n          </Link>\n        </h4>\n        {showContactInfo ? (\n          <ul className=\"list-group\">\n            <li className=\"list-group-item\">Email: {email}</li>\n            <li className=\"list-group-item\">Phone: {phone}</li>\n          </ul>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n  delContact: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { delContact }\n)(Contact);\n","import {\n  GET_CONTACTS,\n  ADD_CONTACTS,\n  DEL_CONTACTS,\n  GET_CONTACT,\n  UPD_CONTACT\n} from \"./types\";\nimport axios from \"axios\";\n\nexport const getContact = () => async dispatch => {\n  const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n\n  dispatch({\n    type: GET_CONTACTS,\n    payload: res.data\n  });\n};\n\nexport const addContact = contact => async dispatch => {\n  const res = await axios.post(\n    \"https://jsonplaceholder.typicode.com/users\",\n    contact\n  );\n  dispatch({\n    type: ADD_CONTACTS,\n    payload: res.data\n  });\n};\n\nexport const delContact = id => async dispatch => {\n  try {\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n    dispatch({\n      type: DEL_CONTACTS,\n      payload: id\n    });\n  } catch (e) {\n    dispatch({\n      type: DEL_CONTACTS,\n      payload: id\n    });\n  }\n};\n\nexport const getCont = id => async dispatch => {\n  const res = await axios.get(\n    `https://jsonplaceholder.typicode.com/users/${id}`\n  );\n\n  dispatch({\n    type: GET_CONTACT,\n    payload: res.data\n  });\n};\n\nexport const updContact = contact => async dispatch => {\n  const res = await axios.put(\n    `https://jsonplaceholder.typicode.com/users/${contact.id}`,\n    contact\n  );\n  dispatch({\n    type: UPD_CONTACT,\n    payload: res.data\n  });\n};\n","export const GET_CONTACTS = \"GET_CONTACTS\";\nexport const DEL_CONTACTS = \"DEL_CONTACTS\";\nexport const ADD_CONTACTS = \"ADD_CONTACTS\";\nexport const GET_CONTACT = \"GET_CONTACT\";\nexport const UPD_CONTACT = \"UPD_CONTACT\";\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getContact } from \"../../actions/contactAction\";\n\nclass Contacts extends Component {\n  componentDidMount() {\n    this.props.getContact();\n  }\n  render() {\n    const { contacts } = this.props;\n    return (\n      <React.Fragment>\n        <h1 className=\"display-4 mb-2\">\n          <span className=\"text-danger\">Contact</span> List\n        </h1>\n        {contacts.map(contact => (\n          <Contact key={contact.id} contact={contact} />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\nconst mapStatToprops = state => ({\n  contacts: state.contact.contacts\n});\n\nexport default connect(\n  mapStatToprops,\n  { getContact }\n)(Contacts);\n\nContacts.PropTypes = {\n  contact: PropTypes.array.isRequired,\n  getContact: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: \"text\"\n};\n\nexport default TextInputGroup;\n","import PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport React, { Component } from \"react\";\n\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport { addContact } from \"../../actions/contactAction\";\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {},\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check For Errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone,\n    };\n\n    //// SUBMIT CONTACT ////\n    this.props.addContact(newContact);\n\n    // Clear State\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {},\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <div className=\"card mb-3\">\n        <div className=\"card-header\">Add Contact</div>\n        <div className=\"card-body\">\n          <form onSubmit={this.onSubmit}>\n            <TextInputGroup\n              label=\"Name\"\n              name=\"name\"\n              placeholder=\"Enter Name\"\n              value={name}\n              onChange={this.onChange}\n              error={errors.name}\n            />\n            <TextInputGroup\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value={email}\n              onChange={this.onChange}\n              error={errors.email}\n            />\n            <TextInputGroup\n              label=\"Phone\"\n              name=\"phone\"\n              placeholder=\"Enter Phone\"\n              value={phone}\n              onChange={this.onChange}\n              error={errors.phone}\n            />\n            <input\n              type=\"submit\"\n              value=\"Add Contact\"\n              className=\"btn btn-light btn-block\"\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddContact.prototypes = {\n  addContact: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addContact })(AddContact);\n","import React, { Component } from \"react\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport { connect } from \"react-redux\";\nimport { updContact, getCont } from \"../../actions/contactAction\";\nimport PropTypes from \"prop-types\";\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  componentWillReceiveProps(nextProps, nextState) {\n    const { name, email, phone } = nextProps.contact;\n    this.setState({\n      name,\n      email,\n      phone\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getCont(id);\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check For Errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n    const { id } = this.props.match.params;\n\n    const updateContact = {\n      id,\n      name,\n      email,\n      phone\n    };\n\n    //// UPDATE CONTACT ////\n    this.props.updContact(updateContact);\n    // Clear State\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <div className=\"card mb-3\">\n        <div className=\"card-header\">Edit Contact</div>\n        <div className=\"card-body\">\n          <form onSubmit={this.onSubmit}>\n            <TextInputGroup\n              label=\"Name\"\n              name=\"name\"\n              placeholder=\"Enter Name\"\n              value={name}\n              onChange={this.onChange}\n              error={errors.name}\n            />\n            <TextInputGroup\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value={email}\n              onChange={this.onChange}\n              error={errors.email}\n            />\n            <TextInputGroup\n              label=\"Phone\"\n              name=\"phone\"\n              placeholder=\"Enter Phone\"\n              value={phone}\n              onChange={this.onChange}\n              error={errors.phone}\n            />\n            <input\n              type=\"submit\"\n              value=\"Update Contact\"\n              className=\"btn btn-light btn-block\"\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contact: state.contact.contact\n});\n\nexport default connect(\n  mapStateToProps,\n  { getCont, updContact }\n)(EditContact);\n\nEditContact.PropTypes = {\n  contact: PropTypes.object.isRequired,\n  getCont: PropTypes.func.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" /> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" /> Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" /> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: 'My App'\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n};\n","import {\n  GET_CONTACTS,\n  DEL_CONTACTS,\n  ADD_CONTACTS,\n  GET_CONTACT,\n  UPD_CONTACT\n} from \"../actions/types\";\n\nconst initialState = {\n  contacts: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_CONTACTS:\n      return { ...state, contacts: action.payload };\n\n    case DEL_CONTACTS:\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n\n    case ADD_CONTACTS:\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n\n    case GET_CONTACT:\n      return {\n        ...state,\n        contact: action.payload\n      };\n\n    case UPD_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n\n    default:\n      return state;\n  }\n}\n","//meeting place for all reducers\nimport { combineReducers } from \"redux\";\nimport contactReducer from \"./contactReducer.js\";\n\nexport default combineReducers({\n  contact: contactReducer\n});\n","import thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension/developmentOnly\";\n\nconst initialState = {}; //createStor takes empty state initially as parameter\n\nconst middleware = [thunk];\n\nexport const store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store.js\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}